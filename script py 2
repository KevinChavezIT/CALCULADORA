from GlobalLibrary import connection, disconnect, execute_unix_commands, write_temporal_file, proccess_information_from_file
from GlobalLibrary import reformat_list_into_pd, fill_data_in_sheet

def execute_alletra_report(storage_line, report_name):
    output_list = []
    
    storage_list = []
    for i in storage_line.split('\n'):
        if i != '':
            storage_list.append(i.split(':'))
    #tipo:Storage:ip:user:pass:port:fac:site:coord:#pools
    for i in storage_list:
        storage_type = i[0]
        storage_name = i[1]
        storage_ip = i[2]
        storage_user = i[3]
        storage_passwd = i[4]
        storage_port = i[5]
        if storage_type == "alletra":
            header = "Name Size(Mib) Online Offline_reason Usage(Mib) Reserve Limit Exported"
            postmanipuled_file = "alletra_post_file.csv"
            remote = connection(storage_ip, storage_user, storage_passwd, storage_port)
    
            output_list = execute_unix_commands('vol --list', remote)
            write_temporal_file("alletra_ldev_list.tmp", output_list)
            output_list = proccess_information_from_file("alletra_ldev_list.tmp", storage_type)
    
            table_in_pd = reformat_list_into_pd(output_list, header, postmanipuled_file, storage_type)
    
            fill_data_in_sheet(report_name, storage_name, table_in_pd)
            disconnect(remote)


def create_alletra_volume_report(report_date):
    storage_file = open("stg_inventory.conf")
    
    for i in storage_file:
        execute_alletra_report(i, "all_san_sw_inventory_{}".format(report_date))   
