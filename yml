---
- name: Consolidar CSV en Excel procesando localmente
  hosts: server_save_xlsx
  gather_facts: false
  vars:
    ruta_csv: "C:\\info_luns"
    archivos_csv:
      - "luns_SpectrumIBM.csv"
      - "luns_NetApp.csv"
      - "luns_Alletra.csv"
      - "luns_Alletra_2.csv"
    archivo_excel_salida: "consolidado.xlsx"
    ruta_local_temporal: "/tmp/ansible_csv_consolidacion"

  tasks:
  pre_tasks:
    - name: Log start of playbook execution
      ansible.builtin.include_role:
        name: pichincha.sre.pre_task

    - name: Crear directorio temporal local
      delegate_to: localhost
      run_once: true
      ansible.builtin.file:
        path: "{{ ruta_local_temporal }}"
        state: directory
        mode: '0755'

    - name: Verificar que los archivos CSV existen en el servidor remoto
      ansible.builtin.stat:
        path: "{{ ruta_csv }}/{{ item }}"
      register: archivos_stat
      loop: "{{ archivos_csv }}"

    - name: Descargar archivos CSV del servidor remoto
      ansible.builtin.fetch:
        src: "{{ ruta_csv }}/{{ item }}"
        dest: "{{ ruta_local_temporal }}/"
        flat: true
      loop: "{{ archivos_csv }}"
      when: archivos_stat.results[ansible_loop.index0].stat.exists

    - name: Instalar dependencias Python necesarias en localhost
      delegate_to: localhost
      run_once: true
      ansible.builtin.pip:
        name:
          - pandas
          - openpyxl
        state: present

    - name: Copiar script Python a localhost
      delegate_to: localhost
      run_once: true
      ansible.builtin.copy:
        src: consolidar_csv.py
        dest: "{{ ruta_local_temporal }}/consolidar_csv.py"
        mode: '0755'

    - name: Ejecutar script de consolidaci√≥n en localhost
      delegate_to: localhost
      run_once: true
      ansible.builtin.command: >
        python3 consolidar_csv.py
      environment:
        CSV_DIR: "{{ ruta_local_temporal }}"
        EXCEL_OUTPUT: "{{ ruta_local_temporal }}/{{ archivo_excel_salida }}"
      args:
        chdir: "{{ ruta_local_temporal }}"
      register: resultado_consolidacion
      changed_when: false

    - name: Mostrar resultado de la consolidaci√≥n
      delegate_to: localhost
      run_once: true
      ansible.builtin.debug:
        var: resultado_consolidacion.stdout_lines

    - name: Subir archivo Excel consolidado al servidor remoto
      ansible.builtin.copy:
        src: "{{ ruta_local_temporal }}/{{ archivo_excel_salida }}"
        dest: "{{ ruta_csv }}/{{ archivo_excel_salida }}"
        mode: '0644'

    - name: Verificar archivo Excel en servidor remoto
      ansible.builtin.stat:
        path: "{{ ruta_csv }}/{{ archivo_excel_salida }}"
      register: archivo_excel_remoto

    - name: Limpiar archivos temporales locales
      delegate_to: localhost
      run_once: true
      ansible.builtin.file:
        path: "{{ ruta_local_temporal }}"
        state: absent

    - name: Mostrar resultado final
      ansible.builtin.debug:
        msg: |
          ‚úÖ Proceso completado exitosamente!
          üìä Archivo Excel disponible en: {{ ruta_csv }}/{{ archivo_excel_salida }}
          üìè Tama√±o: {{ archivo_excel_remoto.stat.size | default(0) }} bytes
          üìÅ Archivos procesados: {{ archivos_csv | length }}

  post_tasks:
    - name: Log end of playbook execution
      ansible.builtin.include_role:
        name: pichincha.sre.post_task
