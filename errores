py -c "
import http.client
import ssl
import json
from datetime import datetime
from os import getcwd

# Copia de las funciones principales con ruta Windows
def get_date_time(format_time):
    now = datetime.now()
    return now.strftime(format_time)

def create_https_connection(host):
    return http.client.HTTPSConnection(host, context=ssl._create_unverified_context())

def get_token_from_csm(connection, username, password, host):
    try:
        headers = {'Accept-Language': 'en-US', 'Content-Type': 'application/x-www-form-urlencoded'}
        payload = 'username={}&password={}'.format(username, password)
        connection.request('POST', '/CSM/web/system/v1/tokens', payload, headers)
        response = connection.getresponse()
        json_token_response = json.loads(response.read().decode())
        connection.close()
        return json_token_response['token']
    except Exception as error:
        print(f'Error obteniendo token: {error}')
        connection.close()
        return None

def write_events_to_file(format_time, alert_type, alerted_host, events_list):
    # RUTA MODIFICADA PARA WINDOWS
    log_path = 'C:/IBM/LOGS/SpectrumControlLOG.log'
    try:
        if type(events_list) is list:
            with open(log_path, 'a') as event_file:
                if len(events_list) > 0:
                    for i in events_list:
                        event_file.write('{};{};{};session name: {} are in abnormal state: {}, please check\\n'.format(format_time, alert_type, alerted_host, i['name'], i['state']))
                else:
                    event_file.write('{};{};{};No abnormal sessions found\\n'.format(format_time, alert_type, alerted_host))
        else:
            with open(log_path, 'a') as event_file:
                event_file.write('{};{};{};{}\\n'.format(format_time, alert_type, alerted_host, events_list))
        print(f'✓ Log escrito correctamente en: {log_path}')
    except Exception as e:
        print(f'✗ Error escribiendo log: {e}')

# Test completo
print('=== TEST COMPLETO DEL SCRIPT ===')
hostname_IP = '10.70.152.131'

connection = create_https_connection(hostname_IP)
token = get_token_from_csm(connection, 'operador', 'hgpANwHPk5q}g.Y', hostname_IP)

if token:
    print('✓ Token obtenido exitosamente')
    # Escribir test en log
    write_events_to_file(get_date_time('%d-%m-%Y-%H:%M:%S'), 'CSM Test', 'Copy Services Manager', 'Test de migración exitoso - Nuevo servidor Windows')
    print('✓ Script funcionando correctamente en Windows')
else:
    print('✗ Error en la autenticación')
"
